{"remainingRequest":"D:\\Java\\Code\\Blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Java\\Code\\Blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Java\\Code\\Blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Java\\Code\\Blog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\Java\\Code\\Blog\\docs\\《TypeScript 从零实现 axios》\\12.ts-axios 部署与发布\\01.ts-axios 编译与发布.md?vue&type=template&id=4c1a2a12&","dependencies":[{"path":"D:\\Java\\Code\\Blog\\docs\\《TypeScript 从零实现 axios》\\12.ts-axios 部署与发布\\01.ts-axios 编译与发布.md","mtime":1639205855844},{"path":"D:\\Java\\Code\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Java\\Code\\Blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Java\\Code\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Java\\Code\\Blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Java\\Code\\Blog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}